<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.microcol</groupId>
		<artifactId>microcol-root</artifactId>
		<version>0.7.0-SNAPSHOT</version>
	</parent>
	<artifactId>microcol-module</artifactId>
	<packaging>jar</packaging>
	<name>MicroCol java module</name>
	<description>
		Create and publish MicroCol uber jar as valid java module
	</description>

	<properties>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.microcol</groupId>
			<artifactId>microcol-game</artifactId>
			<version>${project.version}</version>
			<classifier>jar-with-dependencies</classifier>
			<type>jar</type>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>travis-ci</id>
			<activation>
				<!-- this profile is skipped when system property "travis-ci" is defined. 
					It allows to skip windows build which not work at Travis CI. -->
				<property>
					<name>!travis-ci</name>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- Pluginy co se provedou mimo CI. -->
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<!-- Skip compiler plugin. I'll do it manually. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<skipMain>true</skipMain>
						</configuration>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Following physical copy of dependency is because of it's required 
				for compilation. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Compile module info. -->
			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<version>2.1.1</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<source>${project.basedir}/src/main/groovy/compile.groovy</source>
				</configuration>
			</plugin>
			<!-- skip installing artifacts -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<configuration>
					<transformers>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
							<resource>module-info.class</resource>
							<file>target/module-info.class</file>
						</transformer>
					</transformers>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>